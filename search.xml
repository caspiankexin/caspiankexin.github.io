<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>55jianyan</title>
      <link href="/2020/08/30/55jianyan/"/>
      <url>/2020/08/30/55jianyan/</url>
      
        <content type="html"><![CDATA[<p>啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>“语象观察”-爬取人民日报并统计词频</title>
      <link href="/2020/08/29/22-ji-zhu-yu-xiang-guan-cha-pa-qu-ren-min-ri-bao-bing-tong-ji-ci-pin/"/>
      <url>/2020/08/29/22-ji-zhu-yu-xiang-guan-cha-pa-qu-ren-min-ri-bao-bing-tong-ji-ci-pin/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><blockquote><p>“语象观察”是之前看过的钱钢老师做的一项社会学研究，由于之前用于发布的“尽知天下事”公众号被封，导致目前无法再看到老师的相关研究成果（或许这个项目已经停止了），便有了自己尝试来研究。<br>钱钢老师的文章示例：<a href="https://sourl.cn/idh34d" target="_blank" rel="noopener">https://sourl.cn/idh34d</a></p></blockquote><h1 id="一、确定整体思路"><a href="#一、确定整体思路" class="headerlink" title="一、确定整体思路"></a>一、确定整体思路</h1><p><img src="https://img-blog.csdnimg.cn/20200828235540231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Nhc3BpYW5rZQ==,size_16,color_FFFFFF,t_70#pic_center" alt></p><h1 id="二、实际操作部分"><a href="#二、实际操作部分" class="headerlink" title="二、实际操作部分"></a>二、实际操作部分</h1><p>作为技术初学者（和小白差不多），所有的操作都是以目的为导向，并不追求操作的完美型，只求在最少涉及技术的情况下实现要求。</p><p>本次所用程序主要由python实现。（python3.8，windows 10 环境下进行的测试）</p><h2 id="1、爬取人民日报的数据"><a href="#1、爬取人民日报的数据" class="headerlink" title="1、爬取人民日报的数据"></a>1、爬取人民日报的数据</h2><p>此处特别感谢CSDN用户@机灵鹤的<a href="https://blog.csdn.net/wenxuhonghe/article/details/90047081" target="_blank" rel="noopener">博客文章</a>，我在他的代码上进行了一丢丢的更改，直接上代码</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> bs4<span class="token keyword">import</span> os<span class="token keyword">import</span> datetime<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">fetchUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：访问 url 的网页，获取网页内容并返回    参数：目标网页的 url    返回：目标网页的 html 内容    '''</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'accept'</span><span class="token punctuation">:</span> <span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span><span class="token punctuation">,</span>        <span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> r<span class="token punctuation">.</span>apparent_encoding    <span class="token keyword">return</span> r<span class="token punctuation">.</span>text<span class="token keyword">def</span> <span class="token function">getPageList</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：获取当天报纸的各版面的链接列表    参数：年，月，日    '''</span>    url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span> <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/nbs.D110000renmrb_01.htm'</span>    html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'pageList'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> temp<span class="token punctuation">:</span>        pageList <span class="token operator">=</span> temp<span class="token punctuation">.</span>ul<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'right_title-name'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        pageList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'swiper-container'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'swiper-slide'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    linkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> pageList<span class="token punctuation">:</span>        link <span class="token operator">=</span> page<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token string">"href"</span><span class="token punctuation">]</span>        url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span>  <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> link        linkList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">return</span> linkList<span class="token keyword">def</span> <span class="token function">getTitleList</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> pageUrl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：获取报纸某一版面的文章链接列表    参数：年，月，日，该版面的链接    '''</span>    html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>pageUrl<span class="token punctuation">)</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    temp <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'titleList'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> temp<span class="token punctuation">:</span>        titleList <span class="token operator">=</span> temp<span class="token punctuation">.</span>ul<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        titleList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'ul'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'news-list'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>    linkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> title <span class="token keyword">in</span> titleList<span class="token punctuation">:</span>        tempList <span class="token operator">=</span> title<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> temp <span class="token keyword">in</span> tempList<span class="token punctuation">:</span>            link <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token string">"href"</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token string">'nw.D110000renmrb'</span> <span class="token keyword">in</span> link<span class="token punctuation">:</span>                url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span>  <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> link                linkList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">return</span> linkList<span class="token keyword">def</span> <span class="token function">getContent</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：解析 HTML 网页，获取新闻的文章内容    参数：html 网页内容    '''</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取文章 标题</span>    title <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>h3<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> bsobj<span class="token punctuation">.</span>h1<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> bsobj<span class="token punctuation">.</span>h2<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span>    <span class="token comment" spellcheck="true">#print(title)</span>    <span class="token comment" spellcheck="true"># 获取文章 内容</span>    pList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'ozoom'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> p <span class="token keyword">in</span> pList<span class="token punctuation">:</span>        content <span class="token operator">+=</span> p<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span>    <span class="token comment" spellcheck="true">#print(content)</span>    <span class="token comment" spellcheck="true"># 返回结果 标题+内容</span>    resp <span class="token operator">=</span> title <span class="token operator">+</span> content    <span class="token keyword">return</span> resp<span class="token keyword">def</span> <span class="token function">saveFile</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：将文章内容 content 保存到本地文件中    参数：要保存的内容，路径，文件名    '''</span>    <span class="token comment" spellcheck="true"># 如果没有该文件夹，则自动生成</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 保存文件</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>path <span class="token operator">+</span> filename<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download_rmrb</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> destdir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：爬取《人民日报》网站 某年 某月 某日 的新闻内容，并保存在 指定目录下    参数：年，月，日，文件保存的根目录    '''</span>    pageList <span class="token operator">=</span> getPageList<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> pageList<span class="token punctuation">:</span>        titleList <span class="token operator">=</span> getTitleList<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> page<span class="token punctuation">)</span>        <span class="token keyword">for</span> url <span class="token keyword">in</span> titleList<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 获取新闻文章内容</span>            html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            content <span class="token operator">=</span> getContent<span class="token punctuation">(</span>html<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 生成保存的文件路径及文件名</span>            temp <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>            pageNo <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            titleNo <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> int<span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            path <span class="token operator">=</span> destdir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span>            fileName <span class="token operator">=</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> pageNo <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> titleNo <span class="token operator">+</span> <span class="token string">'.txt'</span>            <span class="token comment" spellcheck="true"># 保存文件</span>            saveFile<span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">gen_dates</span><span class="token punctuation">(</span>b_date<span class="token punctuation">,</span> days<span class="token punctuation">)</span><span class="token punctuation">:</span>    day <span class="token operator">=</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>days<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> b_date <span class="token operator">+</span> day <span class="token operator">*</span> i<span class="token keyword">def</span> <span class="token function">get_date_list</span><span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    获取日期列表    :param start: 开始日期    :param end: 结束日期    :return: 开始日期和结束日期之间的日期列表    """</span>    start <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> <span class="token string">"%Y%m%d"</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>endDate<span class="token punctuation">,</span> <span class="token string">"%Y%m%d"</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> d <span class="token keyword">in</span> gen_dates<span class="token punctuation">(</span>start<span class="token punctuation">,</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span>days<span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    主函数：程序入口    '''</span>    <span class="token comment" spellcheck="true"># 输入起止日期，爬取之间的新闻</span>    beginDate <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入开始日期:'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 日期格式20200101</span>    endDate <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入结束日期:'</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> get_date_list<span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span>    <span class="token keyword">for</span> d <span class="token keyword">in</span> data<span class="token punctuation">:</span>        year <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>year<span class="token punctuation">)</span>        month <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>month<span class="token punctuation">)</span> <span class="token keyword">if</span> d<span class="token punctuation">.</span>month <span class="token operator">>=</span><span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>month<span class="token punctuation">)</span>        day <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>day<span class="token punctuation">)</span> <span class="token keyword">if</span> d<span class="token punctuation">.</span>day <span class="token operator">>=</span><span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>day<span class="token punctuation">)</span>        destdir <span class="token operator">=</span> <span class="token string">"E:/date"</span>  <span class="token comment" spellcheck="true">#此处选择爬取下来文件的存储路径</span>        download_rmrb<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> destdir<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"爬取完成："</span> <span class="token operator">+</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#         time.sleep(3)        # 怕被封 IP 爬一爬缓一缓，爬的少的话可以注释掉</span><span class="token comment" spellcheck="true"># 不建议一次爬取太多天的数据，如果报错，可能是被封ip，稍等一会再进行即可</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2、整理爬取的数据"><a href="#2、整理爬取的数据" class="headerlink" title="2、整理爬取的数据"></a>2、整理爬取的数据</h2><p>第一步爬虫爬下来的是将每天所有文章保存在一个文件夹下，需要将所有文章合并为一个txt文件。</p><p>此处代码感谢CSDN用户@yunzifengqing的<a href="https://blog.csdn.net/yunzifengqing/article/details/82465794?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159852148519724839240101%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=159852148519724839240101&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v3~pc_rank_v4-1-82465794.first_rank_ecpm_v3_pc_rank_v4&utm_term=python+%E5%90%88%E5%B9%B6+%E5%AD%90%E6%96%87%E4%BB%B6%E5%A4%B9+txt&spm=1018.2118.3001.4187" target="_blank" rel="noopener">博客文章</a></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 本知识来源于：https://sourl.cn/LR2N5W</span><span class="token comment" spellcheck="true"># 本程序支持合并文件夹及其子文件中txt的合并</span><span class="token keyword">import</span> os<span class="token comment" spellcheck="true"># 运行Python过程中输入文件夹路径及合并后的文件路径及名称</span><span class="token comment" spellcheck="true"># rootdir = raw_input("the old path: ")</span><span class="token comment" spellcheck="true"># newfile = raw_input("the new path and filename: ")</span>rootdir <span class="token operator">=</span> r<span class="token string">'E:\date'</span>   <span class="token comment" spellcheck="true"># 输入需要合并文件的文件夹路径</span>newfile <span class="token operator">=</span> r<span class="token string">'E:\date\合并后文档.txt'</span>  <span class="token comment" spellcheck="true"># 输入合并后文件的存储路径</span>paths <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true"># 存放文件夹（含子文件夹）下所有文件的路径及名称</span><span class="token comment" spellcheck="true"># 获取文件夹（含子文件夹）下所有文件的路径及名称</span><span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>rootdir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> file <span class="token keyword">in</span> files<span class="token punctuation">:</span>        paths<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 支持中文名称</span><span class="token comment" spellcheck="true"># 创建新的文件</span>f <span class="token operator">=</span> open<span class="token punctuation">(</span>newfile<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 将之前获取到的文件夹（含子文件夹）下所有文件的路径及名称里的内容写进新建的文件里</span><span class="token keyword">for</span> i <span class="token keyword">in</span> paths<span class="token punctuation">:</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> open<span class="token punctuation">(</span>i<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        f<span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>line<span class="token punctuation">)</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 保存并关闭新建的文件</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3、统计关键词的出现次数"><a href="#3、统计关键词的出现次数" class="headerlink" title="3、统计关键词的出现次数"></a>3、统计关键词的出现次数</h2><p>搜索关键词虽是日常生活中最常用到的操作，但是花费是精力是最大的。由于合并后文本的字数非常大，且需要搜索的关键词很多，如果是通过软件搜索那工作量太大了，此外网上有很多的python搜索关键词的代码，但是大多是需要我在程序中输入需要搜索的关键词，不适合关键词很多的情况。</p><p>此外，作为python小白，之前走错路查了非常多的自然语言处理，但是最后还是查找资料找到了想要的程序。</p><hr><p>实现此项目的首先需要创建关键词文件，这个根据具体需要进行更换，关键词的整理或许还需要爬虫的支持，我暂时还未涉及，如果不多可以手动输入。还有为了考虑项目的实际需要，选择在程序中指定关键词和文本路径，以便减少后续操作的更改量。</p><p>此代码统计次数部分感谢B站用户@Deustchlands的<a href="https://www.bilibili.com/video/BV1ue411s7Gv" target="_blank" rel="noopener">视频</a>，关键次文件和需统计文本的路径知识感谢CSDN用户@Scarlett2045的<a href="https://blog.csdn.net/weixin_43507682/article/details/103078816" target="_blank" rel="noopener">博客文章</a>，将统计结果输出为csv文件知识感谢CSDN用户@Aaran123的<a href="https://blog.csdn.net/weixin_44298385/article/details/104392226" target="_blank" rel="noopener">博客文章</a>，还很感谢无数网友的乐于分享帮助解决了很多问题。</p><blockquote><p><strong>注意：</strong><br>1、<code>with   open（）</code>里的路径是‘<code>\</code>’,<code>Excel = open（）</code>里的路径是‘<code>/</code>’<br>2、关键词名单为txt文件，每个关键词为一行。<br>3、本程序其实具有两个部分，打印出统计结果，和输出有统计结果的csv文件<br>4、倒数第三行和第七行中的数字分别代表打印和输出排名的前多少位，输出的排名必需小于或等于可以输出的排名，例如10个关键词只有7个出现过可以被搜到，那输出的排名智只能小于等于7。</p></blockquote><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 本知识来源：https://www.bilibili.com/video/BV1ue411s7Gv </span><span class="token comment" spellcheck="true">#  https://github.com/Ericwang6/three_body</span><span class="token comment" spellcheck="true"># https://sourl.cn/jKeQYH      https://sourl.cn/cDP8HR</span><span class="token keyword">import</span> jieba<span class="token keyword">import</span> csv<span class="token comment" spellcheck="true"># 打开准备好的关键词名单</span><span class="token keyword">with</span> open<span class="token punctuation">(</span>file<span class="token operator">=</span>r<span class="token string">"E:\OneDrive\projects\语象观察—人民日报\相关代码\词频统计\中国政要名单.txt"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'UTF-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    nameList <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打开要进行词频统计的文本</span><span class="token keyword">with</span> open<span class="token punctuation">(</span>file<span class="token operator">=</span>r<span class="token string">"E:\date\合并后文档.txt"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'UTF-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    txt <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 向jieba库中加入人名，防止jieba在分词时将人名当作两个词拆分掉</span><span class="token keyword">for</span> name <span class="token keyword">in</span> nameList<span class="token punctuation">:</span>    jieba<span class="token punctuation">.</span>add_word<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 打开表格文件，若表格文件不存在则创建</span><span class="token comment" spellcheck="true"># 输出的文件路径也是可以设置的，和之前的修改估计一样</span><span class="token comment" spellcheck="true"># 直接输入要存入的路径即可，不过路径中不是“\”而是“/”</span>Excel <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"E:/date/本月中国政要出现次数.csv"</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>writ <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>Excel<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 创建一个csv的writer对象用于写每一行内容</span>writ<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'名称'</span><span class="token punctuation">,</span> <span class="token string">'出现次数'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写表格表头</span><span class="token comment" spellcheck="true"># 分词</span>txt <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 创建一个字典，用于对词出现次数的统计，键表示词，值表示对应的次数</span>counts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> item <span class="token keyword">in</span> txt<span class="token punctuation">:</span>    <span class="token keyword">for</span> name <span class="token keyword">in</span> nameList<span class="token punctuation">:</span>        <span class="token keyword">if</span> item <span class="token operator">==</span> name<span class="token punctuation">:</span>            counts<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>  <span class="token comment" spellcheck="true"># 在字典中查询若该字返回次数加一</span><span class="token comment" spellcheck="true"># 排序并输出结果</span>count <span class="token operator">=</span> sorted<span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key<span class="token operator">=</span><span class="token keyword">lambda</span> kv<span class="token punctuation">:</span> kv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> count<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 选择打印输出前多少的数据</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 会显示在控制面板上，但不会保存到本地</span>item <span class="token operator">=</span> list<span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将字典转化为列表格式</span>item<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 对列表按照第二列进行排序</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   <span class="token comment" spellcheck="true"># 要确保设置导出的数小于等于可以导出数的最大值</span>    writ<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>item<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将前几名写入表格，</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'统计结果输出成功'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4、后续操作"><a href="#4、后续操作" class="headerlink" title="4、后续操作"></a>4、后续操作</h2><p>如果想要全自动，可以直接将这几段代码按顺序合并在一起，便能自动执行相应的功能。</p><p>在输出统计结果之后，可以按照自己的需求进行相应操作。可视化和社科研究就不在这里考虑了。</p><hr><p>我已经将爬取下来的原始数据按月份分类上传到github仓库中了，欢迎访问。<a href="https://github.com/caspiankexin/people-daily-crawler-date" target="_blank" rel="noopener">https://github.com/caspiankexin/people-daily-crawler-date</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>对于参与舆论，法律规则和立场的一些反思</title>
      <link href="/2020/08/27/21-self-dui-yu-can-yu-yu-lun-fa-lu-gui-ze-he-li-chang-de-yi-xie-fan-si/"/>
      <url>/2020/08/27/21-self-dui-yu-can-yu-yu-lun-fa-lu-gui-ze-he-li-chang-de-yi-xie-fan-si/</url>
      
        <content type="html"><![CDATA[<blockquote><p>针对近期热点事件“男生追赶猥琐男，直接进行伤害，造成轻伤，男生被猥琐男索赔刑拘，猥琐男和女生协商后数百元和解”我在评论的评论里发表了一些纠正评论中关于法律规则的不客观的发言。</p></blockquote><p>我依旧秉承不评论原博，只评论评论，观察和思考评论文化。以自己所学和所查来纠正不符事实的发言。</p><p>我纠正的多是网民感性情绪化的发言，与法律学科的有很大出入，经基本的法律知识评论后收到了很多的反驳攻击。有各种各样的。但都是感性情绪，很少有理性客观交流。</p><p>对这些反驳并不在意，不过这件事我还是需要反思：</p><ol><li>为何会陷入被攻击的境地</li><li>所学法律所建立的法治规则观念和人民群众的情感的冲突</li></ol><h3 id="为什么会陷入被攻击的境地？"><a href="#为什么会陷入被攻击的境地？" class="headerlink" title="为什么会陷入被攻击的境地？"></a>为什么会陷入被攻击的境地？</h3><p>我作为一个普通的互联网参与者，理应不该让自己陷入暴力之中，即便是观点不同的争论有不该出现被普遍反对的情况。此次直接原因在于我的评论触动了大家反感的观点，即便观点在科学和专业上是正确的。深层原因或许是我有对道理的渴望，不喜欢这么显然的对专业的无知批评。</p><p>当我反思评论的动机时，发现只是单纯的想纠正他人的错误说法，并没有什么太大的意义。我对舆论的看法是<strong><em>舆论中讲道理是没有用的，舆论中的人或言论不过是各种power（人，观点，思想，文化）的资源，考虑的是应该如何引导或利用来服务自己，且要避免自己成为成为某种舆论的资源。</em></strong> 而我的评论行为显然又陷入了未经思考的本能思维了。<strong><em>其次，应该坚持以目的导向来作为行动的准则，凡事都应该明确想干什么和要干什么，不让行为找不到动机支撑</em>。</strong></p><p>坚持以上两个原则，就能有效避免未经思考的行动，避免落入被攻击且无用的境况中。</p><h3 id="所学法律建立的法治规则意识与人民群众需求的冲突"><a href="#所学法律建立的法治规则意识与人民群众需求的冲突" class="headerlink" title="所学法律建立的法治规则意识与人民群众需求的冲突"></a>所学法律建立的法治规则意识与人民群众需求的冲突</h3><p>这是反思的重点。法制观念和专业主义是我认可的，但是当以这些正确的知识或理论思考的时候就会和人民大众对立。就像一句调侃的话：一些人学法学到最后都得去补一补道德。这种矛盾导致我以好的出发点来行动却没有预期中的效果，甚至是走向了群众的对立面。</p><p>看罗翔老师的视频提醒到我，我可能犯了形而上学的教条主义，过分看重了道理和逻辑的分析，忽视了社会生活中的实际，将道理逻辑强加于社会生活，忽视了社会本身。</p><p>规则道理或法律产生于社会生活，被人们利用和服务于社会，期望社会按照规则道理（人类主观创造的）来运行就是本末倒置了。道理产生于社会，如果和社会产生冲突，那就是规则进行自我否定在发展的时刻，不应该用道理来约束限制人民群众的发展。</p><hr><p>虽有模糊的意识到问题，但却无法具体表述，可意会不可言传。</p><p>还是忍不住的追求确定性稳定性的价值，想马原这样不偏不倚的“居中”有点反人性呀。不过也明白世界不按人的想法来运行。</p>]]></content>
      
      
      <categories>
          
          <category> Self </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>艰难的信用卡申请历程</title>
      <link href="/2020/08/23/20-self-jian-nan-de-xin-yong-qia-shen-qing-li-cheng/"/>
      <url>/2020/08/23/20-self-jian-nan-de-xin-yong-qia-shen-qing-li-cheng/</url>
      
        <content type="html"><![CDATA[<p>大学生没有收入来源，所以认定没有还款能力，便限制学生申请信用卡。（我明白这个年龄就算不是学生没有资产也很难申请到信用卡，不过我就是想吐槽一下了）</p><p>我就来叨叨一下我申请信用卡的艰难历程。</p><hr><p>因为疫情原因，导致我心心念的《花木兰》迟迟未上映。在Disney公告说将会在自己的Disney+上映时，我就想到时候想点办法尽早看到。所以尝试申请了双币信用卡。</p><p>明确自己的需求点：</p><ul><li><p>有外币功能，支持境外使用</p></li><li><p>对额对没有要求</p></li><li><p>没有年费等额外支出</p></li><li><p>不打扰家人，自己身份申请</p></li></ul><p>根据网上查询的众多经验贴，发现合适的有中信、工行、民生，专门查询时发现中信银行的学生信用卡活动已经结束，民生和工行都有针对高校生的外币信用卡，不过额度都很有限。</p><p>民生银行是“MORE世界卡”，网上有人说这个卡比较容易办下来，所以我首先申请的就是这张卡，在客服的沟通下填写了申请信息，满心期待的两天后收到了审核未通过的短信。（亏我还和客服咨询了那么多(︶︹︺)</p><p>工商银行是“星座信用卡”，采取的是银联和Visa两张卡的形式，属于先存钱再消费，存多少有多少额度。看网上的情况这个卡也挺好申请的，但是就算是申请的校园版都还是把我给拒了。唉！这种零额度的卡也会被拒，让我怀疑自己的信用水平。</p><p>通过网申的几种都试过以后久一点放弃了，虽然我相信如果一定要申请的话，还是可以申请到的，但可能需要多往银行网点跑几趟了，不在城里住没那么多时间花费在这个上面。（以后还是得找人或银行网点来办，网申这个不太稳）</p><p>想到我之前有通过志愿汇申请下一张“中国银行志愿汇联名信用卡”，只不过没有激活，这让我看到了一线生机。必须要说一下第一次激活的糟糕经历，这个卡刚发下来的时候只能够在网点激活，那是寒冬时节，我拿出宝贵的周末时间去城里的网点，结果连着两间网点都关门，直到更远的第三家，结果还没等走一遍激活的程序就被营业人员告知在校学生无法申请信用卡，所以根本没法激活。在没有走相应程序的状况下就拒绝给我激活。</p><p>后来觉得当时有点问题，在联系客服后确认应该是可以激活的。所以在时隔一年时间再去银行网点办理，还是一样的找了两家都关门，直到给客服打电话才找到一个营业的网点。结果营业员在系统中却没有找的我的信息，查询半天后，他们也不知道具体原因，建议我把卡给注销了然后重新申请。这就算是直接宣告了这张卡的作废。</p><p>为了办一张信用卡忙忙碌碌的查了很多资料，费了很多时间和精力，结果全部无功而返，还留下了数次的申请失败记录。银行有银行的道理,但是这对一般人真的太不友好了吧，我只需要一样支持外币的信用卡来实现一些基本的身份验证功能，却这么艰难。我都不知道是外国太落后了呢还是国内银行太保守了。</p>]]></content>
      
      
      <categories>
          
          <category> Self </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>星空带来期望也带来绝望</title>
      <link href="/2020/08/10/19-xing-kong-dai-lai-qi-wang-ye-dai-lai-jue-wang/"/>
      <url>/2020/08/10/19-xing-kong-dai-lai-qi-wang-ye-dai-lai-jue-wang/</url>
      
        <content type="html"><![CDATA[<h1 id="星空带来期望也带来绝望"><a href="#星空带来期望也带来绝望" class="headerlink" title="星空带来期望也带来绝望"></a>星空带来期望也带来绝望</h1><p>我觉得这个时代最伟大的东西是互联网，它能让人联系远在天边的人了解到其他的世界。这个能力给我这样的小县城的人一个途径，一个了解外面的时间的方法。</p><p>中学从网络看到很多很优秀的人，那时内心充满了景仰，觉得他们好厉害呀，想让自己也成为和他们一样的人。通过这些人了解了外面世界，也从他们那里学到了很多的东西，甚至三观的建立也是在他们的影响之下的。对我来说，我很感谢有这些人在网络上的存在，让我可以接触到这些生活中不可能存在的人。</p><p>现在回想也不知道态度的转变是从什么时候开始的。只是慢慢的觉得出现了叛逆情绪，开始反抗他们的观点和带给我的影响。虽有叛逆但是不影响我依然关注和接受着他们的发声。但是不再会是全盘接受了，他们从教科书变成了参考书，我把这定义为自我意识的觉醒。（自我意识不一定是要去强调自我利益，我认为包括是自己来做判断和决定）</p><p>小时候的希望很惭愧还没有做到，自己还是那个没能发出光的人。现实和理想的差距以及不断起来的逆反，都让我怀疑这一切，我到底有没有可能成为曾经景仰的那些人。网上优秀的人很多，但了解越深，看到的是我们之间的起点和物质差距，成长经历和现实压力的巨大不同。这些无法改变的不同造就我们能力和可能性的不同，也导致我很难实现曾经的想法。</p><p>我对世界和人生的期望来自于外面的世界的优秀的人的讲述，从最开始的书到之后的网络。可是成长后的我最大的痛苦也是来自这些早年的期望。我看到了世界的美好，但是却无法到达它，中间夹杂着无数能或不能的无奈。给了希望，但却无法让你抓住。</p><p>如果来生要成为什么，我想做一个蚂蚁，虽然是一生都在劳动，但是没有思想就没有痛苦，这样的情况下蚂蚁说不定比我们人类在内心层面还是轻松的多。</p><blockquote><p>放眼望向星空，璀璨的宇宙让我看到无限的可能，但也会让我看清自己有多么渺小。或许从未看向星空，而是看向自己，探寻自己，也是一种不错的选择。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>少点政治，少点讯息，多点自我</title>
      <link href="/2020/07/29/18-shao-dian-zheng-zhi-shao-dian-xun-xi-duo-dian-zi-wo/"/>
      <url>/2020/07/29/18-shao-dian-zheng-zhi-shao-dian-xun-xi-duo-dian-zi-wo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>从疫情开始时间比较多，更多的关注了社会问题。但这是否是好事呢？万事还是得有个度。</p></blockquote><p>早早的就通过网络知道外面世界的样子，明白政治上的斗争是多么的广泛，也清楚不应该把自己完全交给集体，要在集权社会保持独立的自己。这些年关注的博主们也都在进行社会探讨的且有西方背景的人，对于外面的事情和声音也都持续的关注和思考着。认为自己生在这样的环境且暂时没有能力走出去的情况下，应该要刻意的听不同的声音，避免自己存在偏见。也正是因为这些原因，导致我一定程度接受西方一些思想，但也能看到它存在的许多问题。</p><hr><p>今年疫情后不去学校有更多时间从网络上关注社会事件，人对资讯好像是可以上瘾的，结果越看越多，有些沉迷。虽然关注的时间更多了，但是思想的产出却不成正比，通过网络关注世界这件事情的性价比太低了，而且导致的沉迷还有害健康。</p><p>解决办法也很简单只要删除了屏蔽掉资讯渠道就可以了，虽然刚开始时会想再去查看，但是过一段时间就会习惯，就会忘记这些事。在我卸载了微博，翻墙时避免政治一段时间后，发现原来生活这么轻松，世界也没有那么烂。有一种解脱感。</p><p>我从来都不认为应该去做一个自私自利的人，不应该只看自己的小世界，而要看到所有生活的大的世界。但是如何正确处理小世界和大世界的关系，我还不是很懂，但是只靠网络关注肯定不是一个高性价比的方式。还是应该让自己有一定的专业能力，再用自己的专业能力去参与大世界，参与中去理解去改变。</p><p>不再整天关注政治和网络热点之后，把自己一直在做的一个小项目给搬到了GitHub上，看了看一些技术的教程，觉得一天天的把时间花在这些自己感兴趣且会产生实质帮助的事情上岂不是更好。有空多学习学习，搞点感兴趣的动动手，时间用来看书也挺好（书太贵了，穷）写一写有的没的的。这些都比沉迷政治或讯息有好处。</p><p><em>有时想想，觉得让自己活得轻轻松松就挺好。等到“达”了以后自然就会有兼济天下的途径和方式的。</em> </p>]]></content>
      
      
      
        <tags>
            
            <tag> 三省吾身 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BLM运动下反思自己是否存在相关问题</title>
      <link href="/2020/07/13/17-blm-yun-dong-xia-fan-si-zi-ji-shi-fou-cun-zai-xiang-guan-wen-ti/"/>
      <url>/2020/07/13/17-blm-yun-dong-xia-fan-si-zi-ji-shi-fou-cun-zai-xiang-guan-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="BLM运动下反思自己的“种族歧视”经历"><a href="#BLM运动下反思自己的“种族歧视”经历" class="headerlink" title="BLM运动下反思自己的“种族歧视”经历"></a>BLM运动下反思自己的“种族歧视”经历</h1><blockquote><p>BLM运动的热度最高峰已经过去了，在那期间看到过一些人写的关于自己被歧视或者歧视他人的经历，这个运动也是一个时机，让自己回顾一下是否有过相关的经历。</p></blockquote><p>不像那些身处国外或者是在国际接触密切的地方，作为一个普普通通的内陆县城成长生活的人来说（现在也还是）几乎很好能接触“种族”的问题，种族歧视是在书本新闻上的存在。只能说说仅有的几个和外族人接触的例子。</p><p>高中时的两个外教印象比较深，虽然我们的外教课跟个形式一样。对这两位外教一个美国年轻黑人和一个美国老年白人都是不太好的印象。对他们的反感并不是来自于国家或民族的原因，是个人卫生注意的问题。黑人外教身上总是有一种很浓很浓（对我而言）的香味，白人外教身上却是一股很浓的狐臭味，它们靠近时散发的味道让我很不舒服。学校还有一个美国青年白人女外教，她我就不反感，因为没有什么特殊的味道。这些我实在不认为属于歧视，只是单纯的对卫生问题的生理的反感，我也没有因为他们而对其他整个群体有偏见。</p><p>另外就是大学里有国际生，学校的政策使然，他们和我们有很多的不同待遇，这是有不满，但没有交集不存在冲突。只是后来我们社团在学校广场上训练（校级组织，一直以来都会默认性的占用广场）他们在广场上打板球，严重侵占了我们的训练空间，没有他们应该让开的意识，另外在我们训练期间把球打到了我们成员身上，而且没有道歉。这个造成了我们很大的愤怒。此外在晚上我们的</p><p>女生回宿舍路上他们留学生会让女生感到害怕。大学里和留学生（中亚地区的男生）的接触因为都是涉及到利益的冲突，所以会有一些不好的印象。不过我一直很清楚，这些都是双方之间利益的冲突，还不至于上升到种族的矛盾之上。</p><p>当然也有好的方面，即使像我这种生在内陆没有出过国门的人也是可以通过网络结识到外国的朋友，这样因为是去交朋友，所以更多的是对对方国家社会的相对了解和赞同，都会将人好的一面展现出来。做为朋友，国家和种族的不同只是我们互相了解的契机，而不是冲突对立的因素。</p><hr><p>仔细想来，我二十几年来也还是活在一个小小的范围里，和外国人其他种族的接触竟然是如此的少。接触有很多的不好情绪，有每个个体的习惯喜好的问题，也有因为利益冲突而引起的对抗，这些都不是针对种族的，自己本族的人因为这些那些原因而反感对抗的人比这些外国人要多的多了。</p><p>其实对于绝大多是根本没有多大机会的接触外族人的人来说，很难是因为某些具体的接触或存在直接的大的利益冲突导致产生的歧视。许多问题可以用其他原因进行解释。歧视产生的原因更有可能是因为关于歧视的话语很多，让人们学会了“种族歧视”——人不止会学习好的东西，还会学习坏的东西，哪怕你是以批判的角度告诉他的。</p>]]></content>
      
      
      <categories>
          
          <category> 三省吾身 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反思 </tag>
            
            <tag> 社会 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的的PC精选软件</title>
      <link href="/2020/06/22/16-wo-de-dian-nao-ruan-jian-jing-xuan/"/>
      <url>/2020/06/22/16-wo-de-dian-nao-ruan-jian-jing-xuan/</url>
      
        <content type="html"><![CDATA[<h1 id="我的的PC精选软件"><a href="#我的的PC精选软件" class="headerlink" title="我的的PC精选软件"></a>我的的PC精选软件</h1><h2 id="系统工具级"><a href="#系统工具级" class="headerlink" title="系统工具级"></a>系统工具级</h2><h3 id="火绒安装软件"><a href="#火绒安装软件" class="headerlink" title="火绒安装软件"></a>火绒安装软件</h3><p>这个软件是最好用的系统安全管理软件，其中的弹窗拦截非常好用。必备中的必备。</p><p>官方网站：<a href="https://www.huorong.cn/person5.html" target="_blank" rel="noopener">火绒安全软件</a></p><h3 id="360压缩国际版"><a href="#360压缩国际版" class="headerlink" title="360压缩国际版"></a>360压缩国际版</h3><p>压缩软件是系统必备，虽然win10自带，但还是有点弱。压缩软件很多人推荐7Zip和Bandizip，但是我使用下来，并没有发现360压缩的流氓之处和严重缺陷。而且国际版的UI也更好看了一点，这个属于是自己的习惯软件。（360家族只用这个）</p><p>官方网站：<a href="https://www.360totalsecurity.com/zh-cn/360zip/" target="_blank" rel="noopener">360压缩国际版</a></p><h3 id="chrome浏览器"><a href="#chrome浏览器" class="headerlink" title="chrome浏览器"></a>chrome浏览器</h3><p>这个就不必多说了，没办法不用它，垄断了人们的选择。（或许尝试用edge来替换掉它，edge成熟后可以）</p><p>官方网站：<a href="https://www.google.cn/chrome/index.html" target="_blank" rel="noopener">chrome浏览器</a></p><h3 id="edge浏览器"><a href="#edge浏览器" class="headerlink" title="edge浏览器"></a>edge浏览器</h3><p>是个不错的选择，系统自带，可以偶尔换换浏览器的风格。</p><h3 id="Onedrive"><a href="#Onedrive" class="headerlink" title="Onedrive"></a>Onedrive</h3><p>系统自带网盘，使用微软账号体系，是我的主力网盘。它是最先要安装的软件。</p><h3 id="IDM下载软件"><a href="#IDM下载软件" class="headerlink" title="IDM下载软件"></a>IDM下载软件</h3><p>神级下载软件，平时直链下载</p><p>破解文件下载地址：<a href="https://nebula.lanzous.com/i0xTYdu5jna" target="_blank" rel="noopener">IDM-果核剥壳破解绿色版</a></p><h3 id="cfosspeed网络优化"><a href="#cfosspeed网络优化" class="headerlink" title="cfosspeed网络优化"></a>cfosspeed网络优化</h3><p>这个是对网络进行优化提升，疫情期间得到了终身的许可权。需要配合portomail邮箱里的许可验证使用。</p><p>下载地址：<a href="https://www.cfos.de/zh-cn/index.htm?reg-10.50.2338" target="_blank" rel="noopener">地址</a></p><h4 id="Treesize-Free"><a href="#Treesize-Free" class="headerlink" title="Treesize Free:"></a>Treesize Free:</h4><p>很不错的树状显示电脑磁盘使用情况软件。<a href="https://customers.jam-software.de/downloadTrialProcess.php" target="_blank" rel="noopener">官网</a></p><h3 id="微软商店产品"><a href="#微软商店产品" class="headerlink" title="微软商店产品"></a>微软商店产品</h3><h4 id="TranslucentTB"><a href="#TranslucentTB" class="headerlink" title="TranslucentTB"></a><a href="https://www.microsoft.com/store/productId/9PF4KZ2VN4W9" target="_blank" rel="noopener">TranslucentTB</a></h4><p>可以将任务栏变透明的软件，配合其他方法把任务栏内容居中使用效果更好。</p><p>####<a href="https://www.microsoft.com/store/productId/9NV4BS3L1H4S" target="_blank" rel="noopener">Quicklook</a> </p><p>按空格键快速预览很多文件的软件</p><p>###<a href="https://getquicker.net" target="_blank" rel="noopener">Quicker</a> </p><p>鼠标邮件打开快捷功能的软件，可以添加很多脚本，极大提高效率，并且有一些很不错的脚本可以使用。推荐尝试一下。</p><p>##娱乐应用级</p><h3 id="腾讯家族"><a href="#腾讯家族" class="headerlink" title="腾讯家族"></a>腾讯家族</h3><h4 id="微信：-官网"><a href="#微信：-官网" class="headerlink" title="微信： 官网"></a>微信： <a href="https://wx.qq.com" target="_blank" rel="noopener">官网</a></h4><h4 id="腾讯Tim：官网"><a href="#腾讯Tim：官网" class="headerlink" title="腾讯Tim：官网"></a>腾讯Tim：<a href="https://office.qq.com" target="_blank" rel="noopener">官网</a></h4><h4 id="QQ影音：官网"><a href="#QQ影音：官网" class="headerlink" title="QQ影音：官网"></a>QQ影音：<a href="https://player.qq.com" target="_blank" rel="noopener">官网</a></h4><h3 id="微软家族"><a href="#微软家族" class="headerlink" title="微软家族"></a>微软家族</h3><p>我很重视平台的互通能力，这些通过一个账号体系就可以做到，但是目前国内可以用的只有微软的账号体系。我的各个设备上的日历，便签，任务，联系人都通过微软账号来同步。所以对微软的软件有依赖性。</p><p>邮件、日历、联系人、To-Do、微软白板、便签、OneNote</p><h3 id="网易云音乐"><a href="#网易云音乐" class="headerlink" title="网易云音乐"></a><a href="https://music.163.com" target="_blank" rel="noopener">网易云音乐</a></h3><p>虽然曲库不全，但还是喜欢云音乐的UI</p><h3 id="迅雷极速版"><a href="#迅雷极速版" class="headerlink" title="迅雷极速版"></a><a href="https://nebula.lanzous.com/ikNq7dun9je" target="_blank" rel="noopener">迅雷极速版</a></h3><p>早些年保存的版本，有些下载必须迅雷，没办法。</p><h3 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a><a href="pan.baidu.com">百度网盘</a></h3><p>大环境如此，很多地方还是离不了</p><h3 id="Apple软件：没办法，有个苹果设备的必须选项"><a href="#Apple软件：没办法，有个苹果设备的必须选项" class="headerlink" title="Apple软件：没办法，有个苹果设备的必须选项"></a>Apple软件：没办法，有个苹果设备的必须选项</h3><h4 id="iCloud-Drive"><a href="#iCloud-Drive" class="headerlink" title="iCloud Drive"></a>iCloud Drive</h4><h4 id="爱思助手"><a href="#爱思助手" class="headerlink" title="爱思助手"></a><a href="https://www.i4.cn" target="_blank" rel="noopener">爱思助手</a></h4><h3 id="Bing-waller"><a href="#Bing-waller" class="headerlink" title="Bing waller"></a>Bing waller</h3><p>必应官方的每日更换壁纸软件。<a href="https://nebula.lanzous.com/iWgj5dump1g" target="_blank" rel="noopener">下载地址</a></p><h2 id="创作级应用"><a href="#创作级应用" class="headerlink" title="创作级应用"></a>创作级应用</h2><h3 id="Adobe家族"><a href="#Adobe家族" class="headerlink" title="Adobe家族"></a>Adobe家族</h3><p>目前使用的软件：PS、PR、AU、AI</p><p>下载地址：</p><h3 id="Office家族"><a href="#Office家族" class="headerlink" title="Office家族"></a>Office家族</h3><p>office365版本</p><h3 id="小丸工具箱"><a href="#小丸工具箱" class="headerlink" title="小丸工具箱"></a>小丸工具箱</h3><p>我认为最富盛名的视频压缩必备软件。</p><h3 id="GitHub家族（我认为的开源、个人开发者们）"><a href="#GitHub家族（我认为的开源、个人开发者们）" class="headerlink" title="GitHub家族（我认为的开源、个人开发者们）"></a>GitHub家族（我认为的开源、个人开发者们）</h3><h4 id="Typora：我认为的最合适的markdown的软件官网"><a href="#Typora：我认为的最合适的markdown的软件官网" class="headerlink" title="Typora：我认为的最合适的markdown的软件官网"></a>Typora：我认为的最合适的markdown的软件<a href="https://typora.io" target="_blank" rel="noopener">官网</a></h4><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h4><p>搭配各种GitHub或其他制作个人图床。picgo搭配GitHub制作图床，以及picgo搭配typora自动上传图片。</p><h4 id="Captura：开源简单强大的录屏软件。官网"><a href="#Captura：开源简单强大的录屏软件。官网" class="headerlink" title="Captura：开源简单强大的录屏软件。官网"></a>Captura：开源简单强大的录屏软件。<a href="https://mathewsachin.github.io/Captura/" target="_blank" rel="noopener">官网</a></h4><h4 id="Pandoc"><a href="#Pandoc" class="headerlink" title="Pandoc"></a><a href="https://pandoc.org" target="_blank" rel="noopener">Pandoc</a></h4><p>配套Typora以便进行多种文档文件的转化。</p><h3 id="XMind"><a href="#XMind" class="headerlink" title="XMind"></a>XMind</h3><p>思维导图的优秀制作，网络上有破解版本。<a href="https://www.xmind.cn/" target="_blank" rel="noopener">官网</a>   <a href="https://nebula.lanzous.com/iVC5fdumj4d" target="_blank" rel="noopener">破解方法</a></p><h3 id="Arctime-Pro"><a href="#Arctime-Pro" class="headerlink" title="Arctime Pro"></a>Arctime Pro</h3><p>强大方便的打字幕工具。我使用的是破解版。<a href="http://arctime.cn/index.html" target="_blank" rel="noopener">官网</a></p><hr><p>以上的软件几乎就是我的电脑在经过几年的“经历”后留下来的软件，不能说说是最好的，肯定还有更好的软件没有被我发现。除了上面这些软甲外，还会用到很多的小工具，比如大名鼎鼎的everything等，都在我的OneDrive里，无需安装，即需即用。</p><p>由于软件太多，这篇文章也算是为自己做的备份。虽然工具依旧不能让人心满意足，但是重要的是人的能力，发掘工具的潜能，用有限的工具创造无限的价值。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于女权运动的一点思考和想法</title>
      <link href="/2020/04/21/15-nu-quan-guan-yu-nu-quan-yun-dong-de-yi-xie-si-kao-he-xiang-fa/"/>
      <url>/2020/04/21/15-nu-quan-guan-yu-nu-quan-yun-dong-de-yi-xie-si-kao-he-xiang-fa/</url>
      
        <content type="html"><![CDATA[<p>运动的群众性和正当性在于回应绝大部分人的核心诉求，允许由一小部分人领导群体去进行抗争来谋求共同利益。核心诉求应该是群体自发性产生少部分人回应，不应该是少数人将自己诉求推广到群体上来形成抗争力量。现在女权运动问题在于并没有一个符合最广大女性群体并且具有其独特性的核心诉求，无法团结就失去了运动的正当性和群众性。</p><p>女权运动在一定地区程度属于“再平衡”运动，男女权利义务的重新分配，现有平衡存在许多维护者，这种情况下的运动出现了让自己去革自己的命的情况。导致了运动的群众基础不足。</p><p>现在的女权运动应该去寻找一些最广大人群都追寻的价值和利益诉求，团结一切可以团结的力量，以长远角度看待运动，有足够耐心循序渐进实现目标，（一两百年能实现都是很快了） </p><p>目的不是要发生轰轰烈烈的革命运动，而是要完善人类文明。以目的为导向，减少锋芒，避免冲突，以符合群体价值利益追求的实际的细微的生活的行动来团结和影响人群，使之从人的内在发生改变。可以做更多的实事，帮助更多的人接受教育，帮助更多人改善生活条件，帮助更多的女性用法律（或其他社会认同）的手段争取自己的正当权益。</p><p>应始终铭记追寻的彼岸理想，不忘初心，避免陷入自我感动和斗争的陷阱。最重要的是明确且坚定的理想追求。</p>]]></content>
      
      
      <categories>
          
          <category> 女权 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>查证！西班牙疫情放弃60岁以上老人的报道是真的吗？带你来查证</title>
      <link href="/2020/03/30/14-chuan-mei-cha-zheng-xi-ban-ya-yi-qing-fang-qi-60-sui-yi-shang-lao-ren-de-bao-dao-shi-zhen-de-ma-dai-ni-lai-cha-zheng/"/>
      <url>/2020/03/30/14-chuan-mei-cha-zheng-xi-ban-ya-yi-qing-fang-qi-60-sui-yi-shang-lao-ren-de-bao-dao-shi-zhen-de-ma-dai-ni-lai-cha-zheng/</url>
      
        <content type="html"><![CDATA[<p>2020年3月25日，中文互联网出现一则消息“西班牙《20分钟》报报道，西班牙将放弃60岁以上新冠肺炎患者”，全平台，大大小小的媒体都转载了。</p><p><img src="https://ae01.alicdn.com/kf/Hd7afa79a70464ae2a3c5ec221e4254d66.jpg" alt></p><p>可以看到这篇文章的来源是“环球网”，这篇文章的内容主体是根据各种信息源进行的拼接，我们本次只进行框选部分的信息查证。 </p><p>环球网无法查询到相关的报道，根据众多平台和众多媒体的内容，我们可以确定环球网是一个重要的传播节点，还可以得出此报道的时间主要3月25日，我们搜索前几天的信息。</p><p><img src="https://ae01.alicdn.com/kf/H68da4c38541349228fb0ecd47af6319cz.png" alt></p><p><img src="https://ae01.alicdn.com/kf/H372d15e67bc04b5d898804831cc15fb1s.jpg" alt></p><p>这是我们可以找到的最找的两个信息源，其中“北美华人e网”上的相关帖子已经被删除了。</p><p><img src="https://ae01.alicdn.com/kf/H3ef62aa73580493099d56898db745f6dd.jpg" alt></p><p>留园网的信息显示文章来源于观察者网，但是观察者网依旧找不到相关文章，不过在当晚九点多，观察者网的微信公众号才发布了这篇文章。时间上有明显的问题。而且观察者网存在不客观重视情绪化新闻的情况。</p><p>对于这两个信息源的表现的种种疑点，我们有理由怀疑这篇报道的真实性。</p><p>可以直接查询文章中提到的《20分钟》报纸，在其官网上，我们可以找到两个相关报道</p><p><img src="https://ae01.alicdn.com/kf/Hf0b87c2402d546d18efce505aa265afbn.png" alt></p><p><img src="https://ae01.alicdn.com/kf/Hff27c9fcf67d41698730de741e9ebabcZ.png" alt></p><p>第一个文章是说当地的医学会和某些医学专家编写了针对这次疫情的医护知道道德指南，里面提到再面对医疗资源不足的情况下，应该选择更有希望存活的人来治疗。对此我专门把这份道德指南找到看了一下，里面并不是之规定了年龄这一个考虑因素，还有很多的考虑因素。而且这是一份道德指南和一些专家的发言。官方并没有说过精致60岁以上患者进入ICU的华语。</p><p>第二个文章是当地官员来进行的辟谣。</p><p>可以看到这两篇文章的时间可以和中文互联网出现相关报道的时间联系上来。此外我还找到了提到的道德指南文件（2020年3月19日发布），时间都可以对的上。</p><p>根据这些信息，可以合理推测国内的不真实报道属于对国外谣言的加工传播，实质是对国外官方发布信息的错误解读。</p><p> 到这里还不可以，我们还需要找到更多的证据来证明这个消息时假消息。我给《20分钟》报社和四个西班牙当地人发邮件询问这个信息的真实性。官方并没有回复我，两个西班牙人回复了我。<img src="https://ae01.alicdn.com/kf/H1cdf8b3b0b0b413abf2c572d4111d38fI.png" alt></p><p>回复我的人都表示，这个消息是假消息，当地对老人也依旧在进行着救治。</p><p>这样的谣言通过一个或两个大媒体的未经查实的发布，可以通过其他媒体的转载快速获得大量的曝光，再加上每个媒体在各个平台都有发布，所以传播速度就会很快。这样的新闻也不太有可能会得到辟谣。西班牙对我们来说是一个不太紧密的国家，更何况这种说别人不好可以凸显自己好的信息，更不会有媒体愿意负责人去辟谣，对他们来说，无益而有害。</p><hr><blockquote><p>以下是b站的相关视频，和文字版本并不对应，可以补充看看。</p></blockquote><iframe src="//player.bilibili.com/player.html?aid=752604097&bvid=BV1Nk4y1o77P&cid=171276156&page=1" style="width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 传媒 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【传媒】疫情期间关于信息媒体的一些思考</title>
      <link href="/2020/03/05/13-chuan-mei-yi-qing-qi-jian-guan-yu-xin-xi-mei-ti-de-yi-xie-si-kao/"/>
      <url>/2020/03/05/13-chuan-mei-yi-qing-qi-jian-guan-yu-xin-xi-mei-ti-de-yi-xie-si-kao/</url>
      
        <content type="html"><![CDATA[<p>因为这场天灾加人祸，无数中国人过了一个加长版的假期。在重大公共事件时，舆论场都是非常热闹的。在这期间一些事件有一点自己的小小思考，在此记录，或许是日后思考的资源。</p><p>###封号问题</p><p>近一段时间以来，我关注的被封号的情况越来越多。有因为舆论暴力退出的B站up主，有并未有违规内容但因为数量巨大的举报而被封号的媒体人，有因为说实话表达了情绪的知名学者被禁言，有因播客节目导致全平台封禁的自媒体等等等等</p><p>疫情期间的审查机制有很多讨论，正面的支持声音来源于疫情期间假新闻等负面信息太多，需要审查机制来进行官方澄清。负面的声音来自于公安机构对八位放哨人进行了处罚，充分显示出这本是一场可以避免的人祸。或许经过这一次的疫情，能让政府重申审视审查制度的利弊。处于政治目的的审查很清楚，不讨论。但是很多非政治或者说政治性不那么强的内容也在经受跟大的管控。网络现在充满了情绪化，平台在正确和用户之间会选择用户，已经出现了集体性的对某个人的投诉，给平台施压，很大可能平台会像集体性的用户妥协，平台只求安稳和流量。因为这些各种各样的原因，每个人都面临着被封号的风险，存在我号不归我的问题，自己无法掌控自己的数字资产。</p><p>###发声的渠道和权利</p><p>假期在看钱理群教授写的《毛泽东时代和后毛泽东时代》事，写到建国后全国人民对于新中国的热情。以了解到的之前的共产党的作为和口碑，再联想到现如今的口碑和形象。在思考变化的原因。</p><p>当然清楚这个变化的原因非常复杂，不是非黑即白一两句可以说的清楚的，我也只是提出在某一个方面的思考，当作是整体思考的一点点前进。</p><p>我想到一个话语权的问题。是否会出现因为官方的管控严重，导致人们不敢表达真实的声音且发声渠道被控制。长期这样加上其他因素，人民不信任官方。这样所有人为了安全在表达时更愿意用官方话语来表达。（学生的作文或发言都写套话不是自己来说，一样的原因）这就导致了官方宣传的失效，因为大家内心是不信任你说的话的，而且另一层面民众内心真实的希望表达的正面的感激的心情，也因为保求安全，只能说官方的话语。想突破官方自己表达正面言论也会因为没有发声途径，或因官方不自信不允许这样的言语出现，害怕是利用文字的反对反讽。</p><p>这就导致，现有模式下，不管怎么做，官方的口碑都会变化，事件长久后，不好的形象在大家心里根深蒂固，很难消除。</p><p>我个人觉得最好的就是普通和真实，讲述真实的自我故事，不要塑造人设不要装腔隐瞒，用真实来与人交流。</p><p>###假新闻、情绪化和人的特点</p><p>刚看完方可成老师的微信推送。讨论公众号“青年大院”及其媒体矩阵所做的事情，对于这种完全以利益为导向的媒体人员，认为确实需要外在（平台/政府）的干预。</p><p>我自己突然想到一个对比，关注的B站里有一些UP主投稿的视频标题和封面也是充斥着标题党和各种诱惑你点开的行为，制作的内容方向也是以粉丝的喜好来决定。这些功利性的一面UP主们也是很坦诚，确实很功利，大家也并不觉得有问题。对比之下，那些被诟病的文字类自媒体在这些方面就让人很反感。</p><p>可以想一下这些差别的原因是什么。</p><ul><li>内容的载体有所不同？好像也不是，我也关注一些文字媒体也是标题党，但不觉得不爽。</li><li>我个人的喜好导致的评价的偏倚？  这个我得反思想一下。</li><li>期望值或信息类型？我点开之前的期望和现实的差距，我不反感的“技巧文章——我先把标题党，情绪化这类诟病模式的文章叫做技巧文章吧”在点开前并无预设，UP主的新视频就是完全未知的状态，而一些事现实和期望差距太大。    这个还的有点思考，想到一些娱乐向的非关注的UP视频也会有不爽的感觉。</li><li>主动和随意？主动寻找的渴求信息质量不达标会让人不爽，无主动偶然遇到的，遇到皆是缘分，没有期待，就不会有太多不爽。</li><li>娱乐或认真的心态？我抱着怎样的心态去看内容的，感觉这点对于一些爽文上可以解释，我抱认真严肃心态，自然不爽。有人对于这方面不关心，抱着娱乐心态，便不会有太多要求，爽一下就挺好的。</li></ul><p>###目前在进行坚持长期公开发声的人好像只有职业人员和研究学者</p><p>这只是针对我关注的人的感觉，有了这个想法后我再更广泛的看了看，还是有很多人再积极发声，用自己的方式和角度来发表意见。对我而言最明显的就是F小姐，他的声音已经少了很多了。</p><ul><li>我觉得部分是政策的原因</li><li>或许有部分是需要过好自己的生活，学生时代可以尽心关注和发声，但工作后自己便成了最重要的了，大家在明哲保身</li><li>而且觉得还是有点“too     young”经受了一些打击之后便没有了之前的激情。</li></ul><p>方老师就是典型的一个地方被干掉就换个地方重新再来。他作为研究学者，这本来就是自己的工作，就算不是因为使命感也会因为工作研究需要而进行发声。如果不想让自己保持沉默，合适的方式还是要确保自己的生活条件，然后通过不沉默来获得相关的利益。这样会有足够的动力支持自己不做沉默者。</p><blockquote><p><strong>疫情在家期间没有什么可做，碰巧这段时间处于信息爆炸的时期，所有有了一些的想法，随手而记，比较混乱，制作记录了，希望逐渐的思考能带来更实质的想法。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 传媒 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考，媒体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【传媒】数字化×新闻传媒--发掘新的“信息”</title>
      <link href="/2020/03/05/12-chuan-mei-shu-zi-hua-xxin-wen-chuan-mei-fa-jue-xin-de-xin-xi/"/>
      <url>/2020/03/05/12-chuan-mei-shu-zi-hua-xxin-wen-chuan-mei-fa-jue-xin-de-xin-xi/</url>
      
        <content type="html"><![CDATA[<p>作为很不专业新闻传媒人士，我知道传媒的人没有几个，最有声望的是香港中文大学的钱钢老师。可惜的是钱钢老师已经很久不在社交媒体上出现了，能看到他的身影的地方是一个名叫“尽知天下事”的公众号（已经被封）会定期推送钱钢老师的“语象观察”系列研究。</p><blockquote><p>语象观察是通过对人民日报等党媒的文章和标题进行分析，统计各类的相关名词出现的次数，比如：各中央政要、各外国政要、各地方政要、各地区名称、各宣传话语和政策文件等数据，从而了解【各个名词】在官方话语中的重视程度，进而分析背后的含义。</p></blockquote><p>“语象观察”让我看到新的媒体的研究方法，是用数据来做研究，而不是用数据支撑文章，其中一些数据让人有新的认识。不过不幸的是这个公众号2018年就被封了，也没有再找到语象观察的后续文章。</p><p>数字化在媒体上的运用已经是很普遍的事情了，每天看的媒体都有相关的内容，“语象观察”的可视化展示在数字媒体时代也有很多的应用对于信息的阅读有很大的帮助。但是以往看到的我觉得是利用数字化的信息技术来展示语言不容易表达的内容，本质是信息面向终端的表达。“语象观察”让我感到眼前一亮是因为根据巨量的数据分析来得出政治信息，这些信息本身就事实存在，也没有人可以隐瞒，但是不进行这些分析就不可能科学的得出它的结论。还有一个很有名的数据新闻，就是山东疫苗案，一位互联网从业者，用自己的网络能力搜寻了公开信息的全国疫苗信息，从统计数据可以发现整个疫苗系统的问题。</p><p>所有信息里，数据是最不容易出错的，尤其是根据长时间广范围的数据来整理信息，责任人会更难进行扯皮和狡辩。</p><p>在信息公示的情况下，普通的民众只需要用基本的技能搜寻合适的信息数据进行科学的逻辑证明就可以得出社会运行的信息，数据更有力。我们期望的是很多普通人能够拿出自己一点的时间来进行数字化信息的整理，揭露社会中的各种问题，完善社会制度，来督促社会变得更美好。</p><p>数字化新闻的愿景就是能让更多人参与、更方便、更有力的建设公共信息环境。不过这些目前都还有很多的困难，这需要有基本的互联网素养，有进行几倍呢数据搜索和整理的能力，其次是社会中的各个主体做到信息公开透明化。只有依靠可靠且足够数量的数据才能够得出让人信得过的结论。</p><p>传统媒体一直处于没落阶段，新媒体在蓬勃发展，双方都存着各自的问题，但我相信真实可靠的媒体永远会被时代所需要，或许让更多的人有更强的社会公民心，能够构成全新的新闻媒体形式，继续服务社会的完善需求。</p><p><strong>我自己的一点点的想法，希望可以在逐渐的思考中得出更好的解决方案。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 传媒 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 传媒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【技术询问】开源程序使用及文本统计的方法</title>
      <link href="/2020/03/01/11-ji-zhu-xun-wen-kai-yuan-cheng-xu-shi-yong-ji-wen-ben-tong-ji-de-fang-fa/"/>
      <url>/2020/03/01/11-ji-zhu-xun-wen-kai-yuan-cheng-xu-shi-yong-ji-wen-ben-tong-ji-de-fang-fa/</url>
      
        <content type="html"><![CDATA[<blockquote><p>需要用到很多GitHub里的程序，下载下来没有可执行的操作。对于这些github里的东西到底该怎么用，随便举例：github里的jieba分词。</p></blockquote><blockquote><p>如何用python来把一个文件夹下的所有txt文件进行合并为一个文件（两级文件夹），也希望可以循环，自动把每个月份下文件合为一个文件。</p></blockquote><blockquote><p>python或者其他语言，有没有好的方法实现文本内统计某个词出现次数。（因为字数太多，导致word无法正常使用）最好是可以导入txt文本进行。还有因为要统计很多的词语，最好可以通过导入我整理的关键词文本，一次完成几十个关键词的统计工作。然后导出到表格文件里。</p></blockquote><p>如果有大佬看到会的，可以指教一下。如果觉得这些对一个小白来说清楚有点难度，那就先不要告诉我了。<strong>我弄了好几天，想先暂停一下，之后，最起码是12月的考试之后，在找时间来解决这些遗留问题。</strong>😂😂🐶</p>]]></content>
      
      
      <categories>
          
          <category> 学习问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【学习笔记】人民日报数据分析及可视化项目记录</title>
      <link href="/2020/03/01/10-xue-xi-bi-ji-ren-min-ri-bao-shu-ju-fen-xi-ji-ke-shi-hua-xiang-mu-ji-lu/"/>
      <url>/2020/03/01/10-xue-xi-bi-ji-ren-min-ri-bao-shu-ju-fen-xi-ji-ke-shi-hua-xiang-mu-ji-lu/</url>
      
        <content type="html"><![CDATA[<blockquote><p>技术小白写的技术向学习文章</p></blockquote><p>最近在琢磨一个项目，利用人民日报的数据来分析官方的语文表达喜好（不往后搞了，不然我肯定会被封）。不是我的原创，是之前看其他公众号做过的，后来因为审核原因那个公众号被封了。</p><p>这种研究的的软件和思路是很多的，做的人也很多。主要是卖广告的分析用户和学术项目来研究。但都不对外开放，所以我还得全部自己来，顺便锻炼学习学习。</p><h2 id="确定整个项目的运行思路"><a href="#确定整个项目的运行思路" class="headerlink" title="确定整个项目的运行思路"></a>确定整个项目的运行思路</h2><p><img src="3gUefI.png" alt></p><p>##绿色为项目进行的主步骤</p><p>##黄色为某一步的准备工作</p><p>##蓝色为项目的可拓展功能</p><h2 id="动手开干"><a href="#动手开干" class="headerlink" title="动手开干"></a>动手开干</h2><h3 id="爬虫部分"><a href="#爬虫部分" class="headerlink" title="爬虫部分"></a>爬虫部分</h3><p>作为一个技术小白，编程啥都都不会，只知道爬虫使用python来做的，需要编程序的部分就不卡住了。不过我一直相信互联网环境下大概率有现成的轮子，不用自己再去造。多年网络生活让我练就一身好的搜索本领，经过几天的全网搜索，在CSDN社区找到一个可行的程序。（不得不吐槽现有的所有的搜索系统真的不太行）</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> bs4<span class="token keyword">import</span> os<span class="token keyword">import</span> datetime<span class="token keyword">import</span> time<span class="token keyword">def</span> <span class="token function">fetchUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：访问 url 的网页，获取网页内容并返回    参数：目标网页的 url    返回：目标网页的 html 内容    '''</span>    headers <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'accept'</span><span class="token punctuation">:</span> <span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span><span class="token punctuation">,</span>        <span class="token string">'user-agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span>    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>    r<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>    r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> r<span class="token punctuation">.</span>apparent_encoding    <span class="token keyword">return</span> r<span class="token punctuation">.</span>text<span class="token keyword">def</span> <span class="token function">getPageList</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：获取当天报纸的各版面的链接列表    参数：年，月，日    '''</span>    url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span> <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/nbs.D110000renmrb_01.htm'</span>    html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    pageList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'pageList'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ul<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'class'</span><span class="token punctuation">:</span> <span class="token string">'right_title-name'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    linkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> pageList<span class="token punctuation">:</span>        link <span class="token operator">=</span> page<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token string">"href"</span><span class="token punctuation">]</span>        url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span>  <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> link        linkList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">return</span> linkList<span class="token keyword">def</span> <span class="token function">getTitleList</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> pageUrl<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：获取报纸某一版面的文章链接列表    参数：年，月，日，该版面的链接    '''</span>    html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>pageUrl<span class="token punctuation">)</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    titleList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'titleList'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ul<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span>    linkList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> title <span class="token keyword">in</span> titleList<span class="token punctuation">:</span>        tempList <span class="token operator">=</span> title<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> temp <span class="token keyword">in</span> tempList<span class="token punctuation">:</span>            link <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token string">"href"</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> <span class="token string">'nw.D110000renmrb'</span> <span class="token keyword">in</span> link<span class="token punctuation">:</span>                url <span class="token operator">=</span> <span class="token string">'http://paper.people.com.cn/rmrb/html/'</span>  <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> link                linkList<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">return</span> linkList<span class="token keyword">def</span> <span class="token function">getContent</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：解析 HTML 网页，获取新闻的文章内容    参数：html 网页内容    '''</span>    bsobj <span class="token operator">=</span> bs4<span class="token punctuation">.</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'html.parser'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 获取文章 标题</span>    title <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>h3<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> bsobj<span class="token punctuation">.</span>h1<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span> <span class="token operator">+</span> bsobj<span class="token punctuation">.</span>h2<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span>    <span class="token comment" spellcheck="true">#print(title)</span>    <span class="token comment" spellcheck="true"># 获取文章 内容</span>    pList <span class="token operator">=</span> bsobj<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span> attrs <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'id'</span><span class="token punctuation">:</span> <span class="token string">'ozoom'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>    content <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> p <span class="token keyword">in</span> pList<span class="token punctuation">:</span>        content <span class="token operator">+=</span> p<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">'\n'</span>    <span class="token comment" spellcheck="true">#print(content)</span>    <span class="token comment" spellcheck="true"># 返回结果 标题+内容</span>    resp <span class="token operator">=</span> title <span class="token operator">+</span> content    <span class="token keyword">return</span> resp<span class="token keyword">def</span> <span class="token function">saveFile</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：将文章内容 content 保存到本地文件中    参数：要保存的内容，路径，文件名    '''</span>    <span class="token comment" spellcheck="true"># 如果没有该文件夹，则自动生成</span>    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 保存文件</span>    <span class="token keyword">with</span> open<span class="token punctuation">(</span>path <span class="token operator">+</span> filename<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">download_rmrb</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> destdir<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    功能：爬取《人民日报》网站 某年 某月 某日 的新闻内容，并保存在 指定目录下    参数：年，月，日，文件保存的根目录    '''</span>    pageList <span class="token operator">=</span> getPageList<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span>    <span class="token keyword">for</span> page <span class="token keyword">in</span> pageList<span class="token punctuation">:</span>        titleList <span class="token operator">=</span> getTitleList<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> page<span class="token punctuation">)</span>        <span class="token keyword">for</span> url <span class="token keyword">in</span> titleList<span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># 获取新闻文章内容</span>            html <span class="token operator">=</span> fetchUrl<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            content <span class="token operator">=</span> getContent<span class="token punctuation">(</span>html<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># 生成保存的文件路径及文件名</span>            temp <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span>            pageNo <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            titleNo <span class="token operator">=</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">if</span> int<span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            path <span class="token operator">=</span> destdir <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'/'</span>            fileName <span class="token operator">=</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> pageNo <span class="token operator">+</span> <span class="token string">'-'</span> <span class="token operator">+</span> titleNo <span class="token operator">+</span> <span class="token string">'.txt'</span>            <span class="token comment" spellcheck="true"># 保存文件</span>            saveFile<span class="token punctuation">(</span>content<span class="token punctuation">,</span> path<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">gen_dates</span><span class="token punctuation">(</span>b_date<span class="token punctuation">,</span> days<span class="token punctuation">)</span><span class="token punctuation">:</span>    day <span class="token operator">=</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>days<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">yield</span> b_date <span class="token operator">+</span> day <span class="token operator">*</span> i<span class="token keyword">def</span> <span class="token function">get_date_list</span><span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    获取日期列表    :param start: 开始日期    :param end: 结束日期    :return: 开始日期和结束日期之间的日期列表    """</span>    start <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> <span class="token string">"%Y%m%d"</span><span class="token punctuation">)</span>    end <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>endDate<span class="token punctuation">,</span> <span class="token string">"%Y%m%d"</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> d <span class="token keyword">in</span> gen_dates<span class="token punctuation">(</span>start<span class="token punctuation">,</span> <span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span>days<span class="token punctuation">)</span><span class="token punctuation">:</span>        data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>d<span class="token punctuation">)</span>    <span class="token keyword">return</span> data<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    主函数：程序入口    '''</span>    <span class="token comment" spellcheck="true"># 输入起止日期，爬取之间的新闻</span>    beginDate <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入开始日期:'</span><span class="token punctuation">)</span>    endDate <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">'请输入结束日期:'</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> get_date_list<span class="token punctuation">(</span>beginDate<span class="token punctuation">,</span> endDate<span class="token punctuation">)</span>    <span class="token keyword">for</span> d <span class="token keyword">in</span> data<span class="token punctuation">:</span>        year <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>year<span class="token punctuation">)</span>        month <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>month<span class="token punctuation">)</span> <span class="token keyword">if</span> d<span class="token punctuation">.</span>month <span class="token operator">>=</span><span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>month<span class="token punctuation">)</span>        day <span class="token operator">=</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>day<span class="token punctuation">)</span> <span class="token keyword">if</span> d<span class="token punctuation">.</span>day <span class="token operator">>=</span><span class="token number">10</span> <span class="token keyword">else</span> <span class="token string">'0'</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>d<span class="token punctuation">.</span>day<span class="token punctuation">)</span>        download_rmrb<span class="token punctuation">(</span>year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">,</span> <span class="token string">'data'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"爬取完成："</span> <span class="token operator">+</span> year <span class="token operator">+</span> month <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#         time.Sleep(3)        # 怕被封 IP 爬一爬缓一缓，爬的少的话可以注释掉</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>##此代码来源于【机灵鹤】的CSDN博客<a href="https://blog.csdn.net/wenxuhonghe/article/details/90047081" target="_blank" rel="noopener">Python 网络爬虫实战：爬取人民日报新闻文章</a></p><p>根据描述，之后对程序进行测试，使用的pycharm教育版，虽然清楚python很简单，但我还是不太会用，而且教育版没有中文。</p><p>测试后无法正常运行，报错显示的是没有相应的“库”，（python是模块化，用到哪个库调用哪个库，需要提前安装）库的安装其实很简单，前提是你要知道什么是“pip安装”，奇怪的是，网上竟然很难找到pip安装的具体方法。</p><p>现在看来，原来我当时被这么小的一个问题给困住了呀。由于无法安装相应库，导致无法在电脑上运行该程序。没办法的时候都计划让学编程的朋友在给试一下这个软件了。哎，有时候灵感就是这么联想到的，用别人的电脑→不如用云电脑吧→直接在线编译器吧。想到了之前听说过谷歌有个可以在线编程运行的产品Google colab（感慨强的存在导致多少人用无法用好工具来创造），测试发现可以运行，本想就一直使用进行数据的爬取，但是免费且公有的云计算不能长期大量使用。所以在测试后还是决定使用本地来运行程序。</p><p>后来看得到这个mooc视频顺利解决这个问题。<a href="https://www.bilibili.com/video/av9784617" target="_blank" rel="noopener">【Python网络爬虫与信息提取】.MOOC. 北京理工大</a>  </p><p>###数据分析</p><p>有了完整的人民日报的文本数据后，开始进行分析，我最开始的设想里数据分析根本就不存在问题，最多是费时间的苦力活而已。但是发现人民日报每个月的文字就有几十万字，office之类软件无法正常使用，没办法用软件的方式来搜索每个词语的出现次数。除此之外，我设想的是一次得出很多关键词的出现次数，如果靠手动一个个搜索的话，工作量过于大了。无法通过熟悉的查找功能，那就想法用程序来自动化运行。</p><p>搜索数据分析的结果比我想的要多得多，发现我好像走到了一个还不是我这个级别可以到达的领地。数据分析是机器学习自然语言方面的内容，对我来说完全是专业级别了，虽然有很多在做这方面的研究，但对局外人很不友好。在查询无数的信息后，我了解到要进行文本的数据分析统计词频并制作词云：首先要对数据进行清理，去除掉无用数据以减少进行下一步操作的数据量；对于中文需要进行分词，将一句话进行分解，有的可以标注每个词的词性，有很多的分词软件（只有源代码），演示效果都不错；分词之后就可以轻松的进行词频统计。</p><p>对于我最大的问题是，几乎所有的程序都是开源的形式，不是可直接使用的软件，这个我目前还不太会用。我主要是卡在了这里。另一个更大的问题是，数据分析目前只找到了自然语言方面的解决方案，不过对于中文的自然语言处理目前还属于一个热门研究领域，并不能完全的将语句分开。各大云服务商都有提供相应的开发者服务（应该要付费），在精准度方面已经是无能为力的事情了，而且这种已经比较正式的技术领域对我心理和能力上都有很大挑战。</p><p>不只是目前找到解决方案但不会用的困境，对于目前的“分词再统计词频”的方案我并不满意，相较于利用算法机器分词的逻辑，我更倾向于自己的逻辑。<img src="https://ae01.alicdn.com/kf/He92f9f3e788c4f9bbcf2e95eb5ce3c2fA.png" alt></p><p>就是最基本的操作，不过目前还没有找到根据这些思路写的程序。依稀记得之前学C语言时，有过这个练习，或许需要再设计其他语言来弄了。</p><h3 id="数据的可视化"><a href="#数据的可视化" class="headerlink" title="数据的可视化"></a>数据的可视化</h3><p>数据可视化，因为分析这步出现困难，导致没能走到可视化这里，数据可视化对我而言相对比较熟悉。只要有合适的数据，做不出惊艳的图表但清楚传达信息还是可以做到的。</p><p><strong>这个项目属于我假期空闲时间多而且无法压抑的对世界的同理心促使下做的，觉得至少应该做点什么，不然我心里过意不去。过程比我想得要容易，最开始时没有想到能走到这么远的的地方，竟然做到了几乎快成功。过程让我发现一切都并没有那么可怕，都是可以一步步解决的。剩下的步骤给我之后找一点事情来做，我相信自己可以完成这个项目。也期待自己的一个小项目可以为之后为大环境贡献一份力量。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 传媒 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近日播客和网站的折腾建设情况</title>
      <link href="/2020/02/01/09/"/>
      <url>/2020/02/01/09/</url>
      
        <content type="html"><![CDATA[<blockquote><p>目前开通了一个博客“The M&amp;W World”，用来“女权”相关的思考，并没有很大的信心可以长期坚持发展下去，对我而言总是在尝试中慢慢锻炼成长。对于网站的定位变换里好多，我希望是一个技术性的内容，但是好像也不太让我满意。    虽然都有我真实的情绪在，但依旧保持着匿名状态，不会对现实生活造成影响。</p></blockquote><h2 id="关于网站的视频和音频的插入方法"><a href="#关于网站的视频和音频的插入方法" class="headerlink" title="关于网站的视频和音频的插入方法"></a>关于网站的视频和音频的插入方法</h2><ol><li><p>由于视频的存储和宽带成本太高，无法自建或使用专业服务器，只能选择b站等视频网站。markdown可以直接在文章里插入嵌入式链接。但在实践操作过程中发现直接引用会出现显示大小和页面不兼容的情况。</p></li><li><p>解决办法，希望利用插件和对象存储自建服务器来解决，因为自建服务器将一劳永逸的解决图片、音频和视频等等所有问题。查询了很多方法。最后因为找不到合适的免费服务器供应商只能作罢。其实最大的问题就是在于兼容上。通过不断查询加之偶然发现（功夫不负有心人）找到了将外加链接予以兼容的方法，插入一段代码来实现。</p></li><li><p>最终方案：图片使用路过图床；视频一般使用各个视频网站的链接；音频节目使用喜马拉雅的分享链接。网站作为全能网站，展示平台。</p></li></ol><h2 id="关于播客的建设"><a href="#关于播客的建设" class="headerlink" title="关于播客的建设"></a>关于播客的建设</h2><ol><li>录制；经过艰难的思想斗争，终于尝试录制了第一期的音频，在户外爆竹声中录的，音频质量不是很好。前半部分使用的是之前编写好的博文（到最后都没有写完），后半部分属于录制过程临时发挥说了说我的想法。播客的内容质量也不是很好，但是在家不方便补充录制，所以就这样凑合吧。</li><li>技术剪辑：开始前看到挺多的播客制作软件和平台，但是几乎都是国外产品并且都是小众。在音频剪辑方面适合的并没有很多，就使用了adobe的AU，并不精通，目前并不精通，第一期播客只使用了最基本的操作。之后有需要再学习吧。   此外，我对于BGM并不了解，所以暂时没有使用。</li><li>归档存储：鉴于F网易云播客事件，对这些内容产品已久也要做好保存归档工作，之前将我的OneDrive提升到15GB，将所有的project存放one drive里，做好所有必须素材的保存工作，以防万一。</li><li>提交分发：最重要的发布，绝大部分播客的分发是一方托管，尽可能多的多方分发。国内和国外还是两个不同的世界。虽然几乎是在自娱自乐，但是在网上的习惯，依旧会运营在海外的平台。海外使用anchor进行托管，（虽然软件有制作等等功能，但我还是将做好的上传上去而已）anchor自动生成rss订阅地址（内网无法访问）并且同步自动提交至其他主流播客平台。国内方面是各个平台相互独立，所以需要自己单独上传，计划之后使用“听喜马拉雅”的服务进行尝试，等之后条件合适的时候再进入其他平台。</li></ol><p>播客RSS订阅地址：<a href="https://anchor.fm/s/12c28a00/podcast/rss" target="_blank" rel="noopener">https://anchor.fm/s/12c28a00/podcast/rss</a></p><p>播客海外主页：<a href="https://anchor.fm/themwworld" target="_blank" rel="noopener">https://anchor.fm/themwworld</a></p>]]></content>
      
      
      <categories>
          
          <category> 折腾日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>He For She,She For He</title>
      <link href="/2020/01/27/08-nu-quan-he-for-she-she-for-he/"/>
      <url>/2020/01/27/08-nu-quan-he-for-she-she-for-he/</url>
      
        <content type="html"><![CDATA[<p>作为一个还没有找到人生乐趣的人，我并不清楚自己可以用怎样的方式来让自己发光发热。受我很欣赏的一些博主的影响，用这个小播客里来满足自己对理想的行动欲。我会在这里和大家来说一说我自己对于女权的观察和思考。作为一个理工科技术男我并不清楚怎样是更好的，在实践中寻找成功的秘籍。</p><p>半个多月前网上有个很火的关于女权的视频，是歌曲类的视频《<a href="https://weibo.com/GAYCAMP?from=feed&loc=nickname&is_hot=1#1580107440978" target="_blank" rel="noopener">我告诉你女孩子一生都要害怕些什么</a>》，听说这首歌上传到网易云很快就被下架和谐了，不过庆幸这个视频似乎在微博上免遭和谐。这个视频的内容是由很多“女性相关”事件的新闻视频配上很直白的歌词而成的，看视频能让人感觉到这个社会对女性的不友好。值得一提的是，这个视频稍早一点有一个网红宇芽发声被家暴的事情。</p><iframe src="//player.bilibili.com/player.html?aid=77014357&cid=131727184&page=1" style="width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>《[我告诉你女孩子一生都要害怕些什么](https://weibo.com/GAYCAMP?from=feed&loc=nickname&is_hot=1#1580107440978)》展示出的问题是很常见的对女性的不公正待遇，像视频里传达的这种对女权的直接行为已经有很多很优秀的人在做了，那我就想从其他角度讨论和思考一下。<p>坦诚的讲，我看这个视频的时候，有一种很想去怼它的欲望，作为一个传播女权的人这种想法好像有点不对，所以就一直在想为什么我会有点反感这个视频，如果能够明白原因，那说不定可以了解其他反感反对女权的人的想法和原因。</p><p>出于理性的思考，我很少对女权发表自己的意见，因为我觉得女权是一个很宏大的议题，是一个直接关乎一半的人类，间接关乎全部人类的事情，而且是一个千万年都没有解决的一个矛盾。解决方案不可能是通过指责一方就可以的。指责最有效的是加深矛盾和对立。 评论很多都把这一切说成是男性的原因，也包括说对男孩的教育不够，以及男生父母家庭的错误心态。</p><p>这些说法简单的想确实都对，但却让我不那么舒服。网友们再说的时候给人一种错觉，我们的世界是很美好，我们每个人都是三观正直，为人优秀的人，只有一些人是社会毒瘤，这社会的问题都是那些人做的。他们和我们是两个对立面的人，他们和我们泾渭分明。但现实是每个人嘴里批判的社会是有我们所有人共同构成的，不存在对立分明的好人和坏人的。在网上大家批判的社会和别人有可能就是某一时刻的自己。社会这么复杂，况且现在大家都没打算当为他人的好人，这个对女性不友好的社会是错误的话，我们每个人都是共犯。【不要把所有的过错都推给别人，他人负责承担过错和改正，自己负责活出自我。】要讨论要传播女权思想，在面对每个具体的案件和不公时，肯定要狠狠骂相关的人员，可以是一方完全无辜，一方完全过错。这样的情绪表达我觉得是很合理和正常的。但是当探讨女权问题时，把情绪和过错归位一方我觉得是不对的，是让我不爽的一个方面。这是我作为一个新闻爱好者对情绪化的本能反感。</p><p>现在女权这个分类有很多，还没有一个能够领导所有人的理论或者是领袖，很多不是女权的也称自己是女权，导致现在大家很反感女权这个词，也不愿说自己是女权。我想向大家推荐的是Emma 2014年在联合国的演讲，演讲说明了Emma的女权观点，我觉得很棒，可以说是所有人（包括不认为自己是女权的人）的共同诉求，男女应当拥有平等权利和机遇。她也提到了她的父母、她的导师、等没有因为她是女生就对她有偏差，认为正是无数像他们这样的“性别平等使者”成就了现在的她。认为这个世界需要更多这样的“性别平等使者”。“He For She”是Emma的演讲主题，女权是一个关乎人类权益的事情，这场运动需要所有人类来参与，只有女性来参与是不可能实现预计的目标的。</p><iframe src="//player.bilibili.com/player.html?aid=55917705&cid=97751821&page=1" style="width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>许多人都不愿意给自己戴上女权的标签，“女权”是一个不受欢迎的词。这是一个问题，一个现象，值得去思考这个问题产生的原因和想办法解决一下这个问题。女权本身就是一项关系人群的社会运动，最终要做的还是要改变人群社会。方案的原因一部分是有很多假女权打着女权的旗号做一些不好的事情，还有就是因为对立而产生的情绪化抵触。我有时也很反感一群人为了自己的利益呼天撼地的，觉得那样只是一些自私的行为。女性为自身争取权利有些许会引发抵触的情绪，那Emma提出的“He For She”是否可以降低抵触的程度，同时“女权及人类权益”的话，男女平等，那是不是也应该可以“She For He”。虽然很多谈论女权的女生的同意男性也是男权社会的受害者，但是依旧还是无法完全放弃作为女生的那些福利。我能看到很多为女权在努力的男性，但很少能看到为男性在努力的女性。没有哪些女性在专门的思考探讨过男性的权利，更少有为男性发声的人。 我并非在这里抱怨，只是想着是不是可以有一些重点为男性发声的人，用“曲线救国”的方式来发展“女权主义”。同时也积极倡导更多的男性来“He For She”这样一来，可以避免把女权运动变成一场为自己争利益的行为，也可以一定程度的降低社会的抵触情绪。（目前这个想法还没有遇见过，不是要让这种方式成为主流，而是让这种方式的运动成为大运动的蹊径）<p><strong>我几乎没有对社会话题发过声，因为当我了解越多发现我对世界的认识还是太浅太少，我害怕传播错误的信息和想法，因为这样，便总是用可能或许这样的词语。女权是我希望贡献的方向，但我依旧还是没有足够的能力去做好，想去改变什么，还是需要有足够的自身能力才可以，我还需要学习和磨练。</strong></p><iframe src="https://anchor.fm/themwworld/embed/episodes/ep-eai9qt/a-a1ct5as" style="width: 100%; height: 180px; max-width: 100%；align:center; padding:20px 0;" frameborder="0" scrolling="no"></iframe>这算是本篇文章的音频版本了，有计划的尝试播客形式，这是第一个节目，之后还会继续探索。]]></content>
      
      
      <categories>
          
          <category> 女权 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 女权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再次杨帆，再次启航</title>
      <link href="/2020/01/15/07-zai-ci-yang-fan-zai-ci-qi-hang/"/>
      <url>/2020/01/15/07-zai-ci-yang-fan-zai-ci-qi-hang/</url>
      
        <content type="html"><![CDATA[<p>已经有好久没有更新网站的推文了，之前那么大决心立的flag算是凉凉了。挣扎了但没作用还是没做到该有的更新。</p><p>这很长一段时间来，状态并不好，开心的时候是没空写感受，只有在悲伤难过时有大把时间和欲望来表达自己的悲惨，但是在并没有什么很明确的伤心感情的情况下，情绪和心境阴沉，这是我这段时间没有记录自己的状态。</p><p>故事和经历已经内心活动此处就略去几万几万字吧。</p><p>是不是真的就有人一生都不会深入思考“人生和生命”的问题，还是说大家都会思考而我只是在经历都会经历的的阶段，又或是我对这个问题的着迷程度超出了平常人的状态。除此之外，有没有可能只是我在自我感动自我催眠呢？</p><p>我有时会认为这一切都是我自己逼自己的，是我将自己锁进牢笼失去自由的。我不清楚，如果真的是这样的话，那我依旧做不到那么快和彻底的转变自己，我只觉得好难呀。人生不易. </p><p>对于这一切一直都得不到清晰的想法，因为暂时还不打算死，所以我要想办法好好活下去，那在解决不了人生疑惑之前先逃避吧。</p><p>每个人负面悲伤的情绪都是很强烈的，但是生活里的方方面面却不太喜欢悲伤情绪。我也不要让自己的负面表现给他人，除了满足自己的情绪，对谁都不好。</p><p>受到F的影响很多，但是她只说谈论了关于社会等非己的话题，没有说过她如何应对自己的自我情绪。</p><p>我应该也要分清内在情绪和外在感受了，内在的情绪我还不知道如何去管理，只能先按大家都说的说法来吧，让自己更优秀一点吧。</p><p><strong>用专业赢得尊重，真诚换取信赖。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>心中若有爱，人生很美好</title>
      <link href="/2019/11/20/05/"/>
      <url>/2019/11/20/05/</url>
      
        <content type="html"><![CDATA[<p>我并不能理解为什么生活这么残忍，人生这么艰难，但人们依旧还是会拼命生活。</p><p>对于《呼兰河传》里的旧社会的人们，我想或许是因为人作为动物”生存的本能”和不思考的愚昧，我一直很看不起这样的生命，认为人如果有了足够的思考就可以突破”生存本能“来自行决定生命的对待。</p><p>人作为人生存的意义是社会属性，生命和个体需要体现价值，无所谓何种价值，都是在自我感化和自我认同，像宗教、信仰、展示，奉新、使命等等人为创造的东西。思考后我也是因为这个觉得生命应该存在并体现些价值的。 </p><p>但问题在于，这些”价值“太过于虚无缥缈，有时选择的那个”价值“会在一瞬间被时代抛弃，以及很多是只有深度参与和一定的“自我洗脑、自我教育”才能够让人把这些价值作为生命的依托。</p><p> 但最大的实际在于，虽然“生存本能”“不思考的愚昧”“价值寄托”都同时作用在人的身上，但理论上现在人的心智是会把动物本能放在意志思考之下的，而且应该都会去思考人生，都会有想要追求的价值或目标。 但！但！但！最广大的人的生存状态并看不到这些东西，看不出青春年少的豪情壮志，看不出对人生进行着的思考，看不出对价值的追求可能。只是单纯努力的过着普通平凡的生活。我很好奇，他们是如何转变为这样的呢，怎样从满怀理想抱负和追求的人变成一个思考日常生活繁琐的人呢，对于他们而言，是什么支撑着他们的存活呢，而没有去选择结束生命。（因为原来支撑生命的东西已经没有了）</p><p> 是成长吗？是成长导致和接受了这个结果吗？我此前特别反感“成长“这个词，认为它就是把人的有价值有生存意义的东西给磨没了的一个过程，我很害怕自己通过成长变成了自己反感的人，害怕自己最后也是没有寄托只是因为动物本能而无价值的存活着。</p><p> 现在我感受到一种成长，不是之前那被我”曲解“的”成长“。</p><p><strong>当我心中有所爱之人，并且我拥有了她时，那时我的感受就是无比的满足，虽然她不在我身边，但我也不会再去羡慕其他在一起的情侣，而且也不会在意那么多其他人的看法，因为有了爱，心中已有无限的满足，不在意其他一切，就是他人有再多我没有的东西，我也不会羡慕，我拥有的爱对我来说是其他一切都比不上的珍贵之物。</strong></p><p> <strong>心中有所爱，便是唯一，想要的只有保护她呵护她，想要创造一个幸福的生活，除了她一切都不在乎，为了她可以放弃其他，因为比起自己她更重要。曾经自己的所依赖的价值都可以为ta放弃。</strong></p><p>这种感悟并不是在热烈喜欢时的感情冲动，而是在某一瞬间的顿悟，或许这个有很多人都说过了，但我明白的都是我自己悟出来的事情。</p><p>《灵笼》中章  马克台词：（刚有这样的感悟就看到了这样的的台词）</p><blockquote><p>你说的没错，除了噬极兽我害怕一切</p><p>而我最害怕的，是像失去红蔻一样</p><p>失去你</p><p>噬极兽是还没杀光，地面依旧不安全</p><p>但那里比灯塔更广阔，更自由</p><p>冉冰</p><p>你愿意和我，恢复旧世界的家庭关系吗</p><p>和我离开灯塔吧，去地面组成自己的家庭</p><p>只要有你在，即使世界毁灭我也不在乎</p><p>但没有了你，对我来说才是真正的末日</p><p>冉冰</p><p>从现在起，我只守护你一个人</p><p>你不会再受伤，也不必再忍耐</p><p>无论地面有多么艰险，我都会为你建造一个家</p><p>无论面对多么强大的噬极兽，我都会挡在你的身前</p><p>不管未来还剩多少时间，我都想在这操蛋的末日中，和你共度余生</p><p>你，愿意吗</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看了一本《呼兰河传》</title>
      <link href="/2019/11/09/04/"/>
      <url>/2019/11/09/04/</url>
      
        <content type="html"><![CDATA[<pre><code>书名：《呼兰河传》时间：2019年10月-11月地点：中北大学图书馆</code></pre><p>##内容：</p><p>呼兰河是一个中国最普通的一个小城，这个小城和其他小城没有什么区别。小城里有各式各样的店铺和人，有许许多多日常普通的事情，描述了小城的城和小城的的大大小小的活动还有这座城里的人们。</p><p>呼兰河这座城里有他的家，家里有他的童年和他的祖父，说了她依稀记忆里的童年故事。家里很大，很荒凉，家里还有一些住户，这些住户干着不同的营生，有着不同的故事但有着相同的命运，残酷的生活之下也有着不同的生存。</p><p>##随便叨叨点：</p><p>萧红的名气很大，但我一直还没有看过她的书也没有了解过她的经历。近年来我很喜欢民国那个时代作家们的作品感觉有点历史又不至于是特别老，所以在需要看书且看到后便开始了一直想读的《呼兰河传》。这本书以自叙回忆的口吻来写，读起来很轻松，比我前段时间没有读完的老舍的书好读多了，用了几个心情不好的晚上就看完了。</p><p>书中所描写的故事就是日常的生活，或许就是当年平淡的事情，但是生活的平淡通过作家描写到书本里流传下来到我看的时候，就会看出更多的故事。生活的残忍让小城的人们生活的很艰难，但人只会逆来顺受，不管生活多么摧残人，所做的只有活下去，没有其他更多的想法，对他们而言，人生下来就是为了活着，对于人生的意义之类的思考是不存在的。这是不是生活的残忍让人们没有权利去思考那些跟高层次的问题。院子里住着的那几户人家，透过他们说出了人身上的问题，信奉暴力和迷信，愚昧且不堪。</p><p>虽然现在我看那个时代的生活能感觉到很多的问题，但我很清楚这是作者已经很明显的说出来了东西，目的就是为了让人看到反思这些问题，并且经历了时代的变迁，本就会更直接的看到之前的问题。</p><p><strong>但是现在这个我所处的时代，我是否有能力看到自身和时代的问题。我是否也是被这个时代的生活残忍迫害成可悲的人，是否也是用自己的思想束缚自己的能力和幸福，是时代的发展的推动者还是残暴的施暴者。我现在不知道，我希望我能知道。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 读书观后感 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欲穷千里目，更上一层楼。</title>
      <link href="/2019/11/02/03/"/>
      <url>/2019/11/02/03/</url>
      
        <content type="html"><![CDATA[<p>这是一个更加寒冷的一周，冷空气更加的强势，让我穿上了更臃肿的衣服；这是一个更美丽的一周，秋季的风景更加绚丽多彩，让我更多的拿起了相机；这是一个让我更加愉快的一周，阴霾散去，看见了更多的未曾想起的美好。</p><p>对于我的一些朋友来说，我经常是一个需要帮助的孩子，常常陷入抑郁伤心之中。十次抑郁八次都会思考到“人生的意义”，最后只能是随缘看何时能恢复正常了。在如此美好的一周的周末，聊一聊我的“人生的意义”。（虽然抑郁时会思考这些，但那个时候啥也都不想做）</p><p>高中是我变化比较大的阶段，因为自己和环境原因比较“丧”，比较消沉。巧的是新华书店在学校里开了分店，在学校有了读书的地方，不想上课，不想吃饭，不想睡觉，就都可以在书店一直看书了，非常棒。当时看的书很多，影响到我的就是柴静的《看见》和余华的系列作品。虽然我知道这是世界不全是真善美，但还是相信真善美等是绝大部分的，（之前看的书更偏向于讲故事）可是余华的书和我以为的给我的反差太过于大了，本来我旧的三观就已经在崩塌，这些书提高了速度和程度。而柴静的《看见》也颠覆了我的以往认知，在这生活的土地上有那么多难以想象的故事，真相和愿景与现实又是相差那么多。生活了十几年的认知的三观在短时间被多方摧毁，让我不得不去思考我人生的意义，发现一切都是那么的不值得，这个世界，这些人，以及我自己都并没有那么好，没有存在的价值。奈何当时的我阅历知识太少，着实想不出个合适的答案，人生意义的空缺让我也有其他的想法，好在还渴望着某些美好。<br>“人生意义”这个问题不能一直空缺，不然我一直思考就不能做其他事情了呀。我当时唯一能有的答案就是“人生并不是为自己而活，为了其他人而不能消失于这个世界。”这个答案有点有点消极，像是为了“堵”住某些问题，而不是“疏通”，但这是我对于“人生意义”的第一个答案，也算是当时的我对所面临的问题的解决办法。</p><p>复习班的时候度过了人生最顺利的一段时间，沉迷学习无法自拔，也未曾考虑过其他问题。现在没有了沉迷的东西，又思考这个万古不变的话题了。</p><blockquote><p>精彩的人生——为了父母亲人的期望<br>开心的生活——为自己的梦想<br>充实向上的生命——为自己的理想  </p></blockquote><p>虽然都有为他人的部分，但之前只需要存在于世就行了，现在只存在早已经不是目的了，只有有一个精彩的人生才会算是对的起他人。</p><p>我以前自视清高，认为自己不是将自己利益看得很重的人，有救世主心结。经历的增多，已经认识到自己以前的错误了。我并不比起他人高尚在哪里，人各有志，只是选择不同而已，志向对于每个人来说没有高低之分。我所谓的高尚也是只是我渴望那种救世的自我感动和他人的敬仰，本质也是为了自我在做的事情。</p><p>反思自己后也慢慢接受了为自己的想法。体会过快乐和悲伤之后，抉择之下，希望快乐是生活的主基调，悲伤是偶尔的调味品。这也符合我最大的梦想，一直就有一个梦想，希望我可以有一个我自己建立的幸福的家庭生活。我并不喜欢心境如死水一样的状态，希望有丰满的内心和情感。</p><p>虽然意识到对我而言自我是比集体更重要的事情，但是内心那些救世的情结在经历了很多事情后更加清晰了，我想让这个世界因为我的存在而更好，因为我的努力而有更少的人活在痛苦之中。希望我可以做到这些。</p>]]></content>
      
      
      <categories>
          
          <category> myself </category>
          
      </categories>
      
      
        <tags>
            
            <tag> myself </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>超级讨厌且需要消灭的两件事情</title>
      <link href="/2019/10/21/02/"/>
      <url>/2019/10/21/02/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在“关于”页面有一句“没有倔强的执念，愿意自我和周边的改变。”的自我描述，我认为这是对我介绍里最有分量的地方。不算自夸也不算自贬低。</p></blockquote><p>自傲且又自卑，孤独却又排外。这是我内心和情绪里的最大矛盾，我很清楚自己有很多的问题和缺陷，虽然这些问题和缺陷让我有时会陷入自卑和伤心之中，但我依然可以在整体上保持一个人坚强的自信。因为我很明确我并不是轻易妥协于自己的人，从未间断的反思自己，希望可以发现并努力修补这些问题。</p><p>孤独却又排外，孤独是我内心长期的状态，从高中时间开始走上了自己孤身一人的道路，刚开始的时候，情感和环境都给了我很大的压力。不过内心的抑郁和丧战胜了一切，最终适应了孤身一人的生活状态，也算是自暴自弃的结果吧。之后即使心态好转，但内心深处的孤僻以深深扎根很难改变。</p><pre class="line-numbers language-php"><code class="language-php">不将自己的真实暴露给别人，只能写在日记里或发在小号上。渴望得到关注和关心，却又将自己放在无人可以接触到的地方，在无人的地方自顾自的狂欢着。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其实我很羡慕那些生活的很精彩的人（排除那些网上所谓装的），将自己的开心和伤心都与大家分享的人。人生的感悟是随着经历与接触事物的积累再慢慢且曲折的过程，常常感叹于那些优秀的人是如何一直保持着一直优秀。或许是都渴望被关心和称赞，如果把自己的优秀分享给大家有了观众就会想自己更加优秀，算是一种正反馈爸。将自己一切都全部藏于只有自己知道的小黑屋里，只有自己一人观赏，拿除了内在向上以外还有什么可以促进自身的成长，并且对自己的容忍度还是比较高的，放在小黑屋里或许外表还光鲜亮丽，但内在已腐烂。众人面前，可以感受到阳光的洗礼，目前的确还是拿不出台面的，但未来的重要可以忽视现在短暂的不堪。</p><p><em>我不清楚这些想法是否准确，不过相信利会大于弊。除此之外，也想不到还有什么是可以促进自身的改变和变革。</em></p><p>目前努力的就是不逃避，不逃避自己的问题和缺点，不忌讳谈论自己的不足。对于如何让自己更加优秀，虽然内心有强烈的渴望，但并没有好的方式来实现。</p><p>曾经的我做到过一个对我来说很艰难的的改变，小时候未认真学习使用筷子，导致十几年都是错误的，在高三时决心要改正用了半年时间纠正了使用筷子的方式。最开始的时间里确实很痛苦，不过最后还是成功了。十几年的最基础的东西都可以被改变，我相信其他的问题还是可以有更好的改变的。</p><p>内心的高傲给了我自信的勇气。想改变的太多，最需要的是有个方法和好的开端来对未来充满信心，去相信自己有能力做到更好。</p><p>有两件想改变的事情一直伴随着我，我对他们的厌恶贯穿我的成长过程，无数次因他们而痛苦。但还是未曾想过要消灭他们。“写字”和“英文音标”。忘不了小学时课上对英文的害怕和每次想写作但看见自己的字就又放下笔的痛苦。但是讽刺的是我又很明确我需要英语来作为我之后的基础以及无法抑制的提笔写作🖊的欲望，越无法实现，越渴望，越渴望，越痛苦。最基础的改变最难但之后的好处会最多，我会开始解决一直困扰我的这两个问题，或许会花费数年时间，但我对自己有足够的信心，如果达到目标也将会促进我的自信。</p><p>我相信自己是个“行动派”。是能实现的。</p><hr><p><strong>虽然热爱写作，但没有学习过写作，也从来没有锻炼的环境，所以写作对我来说仍然是一件艰难且痛苦的过程。相信</strong></p><pre class="line-numbers language-c"><code class="language-c">“开始去做比做到完美更重要。”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>我也希望以后有机会可以学习一下写作专业知识。</strong></p>]]></content>
      
      
      <categories>
          
          <category> myself </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flag </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成为自己所“仰望”的人</title>
      <link href="/2019/10/12/01/"/>
      <url>/2019/10/12/01/</url>
      
        <content type="html"><![CDATA[<p>每次访问其他人的个人博客时，都会感到很佩服，因为觉得这些人都好厉害，既有做网站的技能也有写内容的知识。也从这一个个网站上看到背后的作者鲜活的人生。慢慢发现这样的个人博客还是蛮多的，让我意识到看上去都一模一样的普通人其实也都有着各自丰富有趣的灵魂和人生。</p><p>作为一个独立的个体，我有想表达的本能的欲望。除此之外我也渴望自己的人生能更多的接触这个世界，想法和知识也应该有一定的对外输出，也许会有和我一样想法的人来产生交流，来了解更多的有趣的灵魂。</p><p><strong>对自己和世界充满期望。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开篇词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二次尝试搭建</title>
      <link href="/2019/10/09/new-text/"/>
      <url>/2019/10/09/new-text/</url>
      
        <content type="html"><![CDATA[<p>虽然之前已经成功了一次，但是不知道为什么突然不能用了，不能这么放弃，再次尝试，争取弄明白。</p><blockquote><p>2019年10月13日</p></blockquote><p><strong>我自己都不知道我花了多长时间尝试了多少次了，但是我不喜欢放弃和失败的感觉！</strong></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
